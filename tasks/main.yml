# prepare
- block: 
  - name: Download oracle DB pre_install package
    get_url:
      url: https://yum.oracle.com/repo/OracleLinux/OL7/latest/x86_64/getPackage/oracle-database-preinstall-{{oracledb_version}}-1.0-1.el7.x86_64.rpm
      dest: '{{oracledb_install_dir}}'

  - name: Install Oracle DB pre_install 
    shell:  yum -y localinstall oracle-database-preinstall-{{oracledb_version}}-1.0-1.el7.x86_64.rpm
    args:
      chdir: '{{oracledb_install_dir}}'

  - name: Delete oracle DB pre_install package 
    shell: rm -rf {{oracledb_install_dir}}/oracle-database-preinstall-*

  when: ansible_distribution == "CentOS"

- name: Install Oracle DB pre_install
  yum:
    name: oracle-database-preinstall-{{oracledb_version}}
    update_cache: yes
  when: ansible_distribution == "OracleLinux"

# install oracle database
- name: Check the oracle DB package exists
  find: 
    paths: '{{oracledb_install_dir}}'
    patterns:
      - "oracle-database-ee-{{oracledb_version}}*.rpm"
  register: oracledb_package

- fail: msg="The Oracle DB package was not detected. Please download it first"  
  when: oracledb_package is defined and oracledb_package.files == []

- name: Install oracle DB, time is long, please be patient
  shell: yum -y localinstall oracle-database-ee-{{oracledb_version}}*.rpm
  args:
    chdir: '{{oracledb_install_dir}}'

# oracle db configuration
- name: Delete Oracle DB initializes file for sec_installation
  shell: /etc/init.d/oracledb_ORCLCDB-{{oracledb_version}} delete
  failed_when: false

- name: Oracle DB initializes the configuration for the first time, time is long, please be patient
  shell: (echo {{oracledb_password}}; echo {{oracledb_password}};) | /etc/init.d/oracledb_ORCLCDB-{{oracledb_version}} configure

- name: Oracle DB ENV configure
  blockinfile:
    path: /home/oracle/.bash_profile
    owner: oracle
    block: |
      export ORACLE_BASE=/opt/oracle
      export ORACLE_HOME=/opt/oracle/product/{{oracledb_version}}/dbhome_1
      export ORACLE_SID=ORACLEDB
      export PATH=$PATH:$ORACLE_HOME/bin
  become: true
  become_user: oracle

- name: Souce environment variables
  shell: source /home/oracle/.bash_profile
  become: true
  become_user: oracle

- name: Change oracle DB init file 
  shell: |
    sed -i "s#db_recovery_file_dest='<ORACLE_BASE>/fast_recovery_area'#db_recovery_file_dest='/opt/oracle/fast_recovery_area'#g" /opt/oracle/product/{{oracledb_version}}/dbhome_1/dbs/init.ora
    sed -i "s#diagnostic_dest='<ORACLE_BASE>'#ddiagnostic_dest='/opt/oracle#g" /opt/oracle/product/{{oracledb_version}}/dbhome_1/dbs/init.ora
    sed -i "s#control_files = (ora_control1, ora_control2)#control_files = (/opt/oracle/oradata/ORCLCDB/control01.ctl, /opt/oracle/oradata/ORCLCDB/control02.ctl)#g" /opt/oracle/product/{{oracledb_version}}/dbhome_1/dbs/init.ora


- name: Create init dir for oracle DB
  file: path={{item}} recurse=yes state=directory
  with_items:
    - /opt/oracle/admin/orcl/adump
    - /opt/oracle/fast_recovery_area

- name: Set dir permissive for oracle DB
  shell: chown -R  oracle.oinstall /opt/oracle/
    
- name: Restart oracledb.service
  systemd:
    name: ['oracledb_ORCLCDB-{{oracledb_version}}',oracle-database-preinstall-19c-firstboot]
    state: restarted
    enabled: yes
 
- name: Create soft link for oracle DB
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
    force: yes
  with_items:
    - {src: '/run/systemd/generator.late/oracledb_ORCLCDB-{{oracledb_version}}.service' ,dest: /run/systemd/generator.late/oracle.service}
    - {src: '/run/systemd/generator.late/oracledb_ORCLCDB-{{oracledb_version}}.service' ,dest:/run/systemd/generator.late/oracledb.service}
    - {src: '/run/systemd/generator.late/oracle-database-preinstall-{{oracledb_version}}-firstboot' ,dest: /run/systemd/generator.late/oracledb-firstboot.service}
    - {src: /opt/oracle/ ,dest: /data/oracledb}
    - {src: /etc/oraInst.loc ,dest: /data/config/oraInst.loc}
    - {src: /etc/oraInst.loc ,dest: /data/oracledb/oraInst.loc}
    - {src: /etc/oratab ,dest: /data/config/oratab}
    - {src: /etc/oratab ,dest: /data/oracledb/oratab}
    - {src: '/etc/sysconfig/oracledb_ORCLCDB-{{oracledb_version}}.conf' ,dest: /data/config/oracledb.conf}
    - {src: '/etc/sysconfig/oracledb_ORCLCDB-{{oracledb_version}}.conf' ,dest: /data/oracledb/oracledb.conf}
    - {src: /opt/oracle/cfgtoollogs/dbca/ORCLCDB/ORCLCDB.log ,dest: /data/logs/oracledb.log}
    - {src: /opt/oracle/cfgtoollogs/dbca/ORCLCDB/,dest: /data/logs/oracle}
    - {src: /opt/oracle/cfgtoollogs/dbca/ORCLCDB/,dest: /data/oracledb/logs}
    - {src: /opt/oracle/product/19c/dbhome_1/dbs/init.ora,dest: /opt/oracle/product/19c/dbhome_1/dbs/initORACLEDB.ora}
    - {src: /opt/oracle/oradata/ORCLCDB/control01.ctl,dest: /opt/oracle/product/19c/dbhome_1/dbs/ora_control1}
    - {src: /opt/oracle/oradata/ORCLCDB/control02.ctl,dest: /opt/oracle/product/19c/dbhome_1/dbs/ora_control2}

# check service state
- name: Check Oracle DB Service     
  shell: systemctl status oracle | grep Active*
  register: check_oracle_service
  notify: check_oracle_service

# check service state
- name: Check oracledb-firstboot Service     
  shell: systemctl status oracle | grep Active*
  register: check_oracledb_firstboot_service
  notify: check_oracledb_firstboot_service
 
# Check version,
# must use sudo sh -c to solve the no-root permission
- name: check Oracle DB version
  shell: sudo sh -c "echo `rpm -qa |grep oracle-database-ee` >> /data/logs/install_version.txt"

